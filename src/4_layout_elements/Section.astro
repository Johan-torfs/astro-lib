---
interface Props {
    paddingX?: [{screen: "xs"|"sm"|"md"|"lg"|"xl", value: 0|8|16|24}];
    marginX?: [{screen: "xs"|"sm"|"md"|"lg"|"xl", value: 0|8|16|24}];
    paddingY?: [{screen: "xs"|"sm"|"md"|"lg"|"xl", value: 0|8|16|24}];
    marginY?: [{screen: "xs"|"sm"|"md"|"lg"|"xl", value: 0|8|16|24}];
    color?: "primary"| "secondary" | "default" | string;
    class?: string;
}

const { paddingX = [], paddingY = [], marginX = [], marginY = [], color = "default", class: classProps } = Astro.props;

const possiblePaddingX = {
    xs: {
        0: "px-0",
        8: "px-8",
        16: "px-16",
        24: "px-24",
    },
    sm: {
        0: "sm:px-0",
        8: "sm:px-8",
        16: "sm:px-16",
        24: "sm:px-24",
    },
    md: {
        0: "md:px-0",
        8: "md:px-8",
        16: "md:px-16",
        24: "md:px-24",
    },
    lg: {
        0: "lg:px-0",
        8: "lg:px-8",
        16: "lg:px-16",
        24: "lg:px-24",
    },
    xl: {
        0: "xl:px-0",
        8: "xl:px-8",
        16: "xl:px-16",
        24: "xl:px-24",
    },
};

const possiblePaddingY = {
    xs: {
        0: "py-0",
        8: "py-8",
        16: "py-16",
        24: "py-24",
    },
    sm: {
        0: "sm:py-0",
        8: "sm:py-8",
        16: "sm:py-16",
        24: "sm:py-24",
    },
    md: {
        0: "md:py-0",
        8: "md:py-8",
        16: "md:py-16",
        24: "md:py-24",
    },
    lg: {
        0: "lg:py-0",
        8: "lg:py-8",
        16: "lg:py-16",
        24: "lg:py-24",
    },
    xl: {
        0: "xl:py-0",
        8: "xl:py-8",
        16: "xl:py-16",
        24: "xl:py-24",
    },
};

const possibleMarginX = {
    xs: {
        0: "mx-0",
        8: "mx-8",
        16: "mx-16",
        24: "mx-24",
    },
    sm: {
        0: "sm:mx-0",
        8: "sm:mx-8",
        16: "sm:mx-16",
        24: "sm:mx-24",
    },
    md: {
        0: "md:mx-0",
        8: "md:mx-8",
        16: "md:mx-16",
        24: "md:mx-24",
    },
    lg: {
        0: "lg:mx-0",
        8: "lg:mx-8",
        16: "lg:mx-16",
        24: "lg:mx-24",
    },
    xl: {
        0: "xl:mx-0",
        8: "xl:mx-8",
        16: "xl:mx-16",
        24: "xl:mx-24",
    },
};

const possibleMarginY = {
    xs: {
        0: "my-0",
        8: "my-8",
        16: "my-16",
        24: "my-24",
    },
    sm: {
        0: "sm:my-0",
        8: "sm:my-8",
        16: "sm:my-16",
        24: "sm:my-24",
    },
    md: {
        0: "md:my-0",
        8: "md:my-8",
        16: "md:my-16",
        24: "md:my-24",
    },
    lg: {
        0: "lg:my-0",
        8: "lg:my-8",
        16: "lg:my-16",
        24: "lg:my-24",
    },
    xl: {
        0: "xl:my-0",
        8: "xl:my-8",
        16: "xl:my-16",
        24: "xl:my-24",
    },
};

const possibleColors = {
    primary: "bg-primary-700 dark:bg-primary-400",
    secondary: "bg-secondary-700 dark:bg-secondary-400",
    default: "bg-white dark:bg-black"
}

const className = `
    ${paddingX.map(({ screen, value }) => possiblePaddingX[screen][value]).join(' ')}
    ${paddingY.map(({ screen, value }) => possiblePaddingY[screen][value]).join(' ')}
    ${marginX.map(({ screen, value }) => possibleMarginX[screen][value]).join(' ')}
    ${marginY.map(({ screen, value }) => possibleMarginY[screen][value]).join(' ')}
    ${possibleColors.hasOwnProperty(color) 
        //@ts-ignore
        ? possibleColors[color] 
        : color
    }
`.replace(/\s+/g, ' ').trim();
---

<section class:list={[className, classProps]}>
    <slot/>
</section>